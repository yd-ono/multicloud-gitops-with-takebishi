apiVersion: batch/v1
kind: Job
metadata:
  name: secret-converter
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  template:
    spec:
      containers:
      - image: {{ .Values.job.image }}
        command:
        - /bin/bash
        - -c
        - |
          export AWS_ACCESS_KEY_ID=$(oc get secrets demo -n {{ .Values.global.bucket.namespace }} -ojsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)
          export AWS_SECRET_ACCESS_KEY=$(oc get secrets demo -n {{ .Values.global.bucket.namespace }} -ojsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)
          if [ "$AWS_ACCESS_KEY_ID" = "" ]; then
            echo "Bucket has not been created yet."
            exit 1
          else
            s3Secret=$(echo -e "s3.accessKey:$AWS_ACCESS_KEY_ID\ns3.secretKey:$AWS_SECRET_ACCESS_KEY")
            oc delete secret odf-secret -n {{ .Values.s3secret.namespaces }}
            oc create secret generic odf-secret -n {{ .Values.s3secret.namespaces }} --from-literal=application.properties="$s3Secret" --from-literal=s3Secret="$s3Secret"
          fi
        name: patch-secret-converter
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: {{ .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      terminationGracePeriodSeconds: 400
