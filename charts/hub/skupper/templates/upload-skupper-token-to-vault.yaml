apiVersion: batch/v1
kind: Job
metadata:
  name: upload-skupper-token-to-vault
spec:
  backoffLimit: 0
  template:
    spec:
      containers:
      - image: {{ .Values.job.image }}
        command:
        - /bin/bash
        - -c
        - |
          cd $HOME; curl -LO "https://dl.k8s.io/release/$(curl -LS https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod 755 $HOME/kubectl
          CACRT=$(./kubectl -n kafka get secret {{ .Values.skupper.token.name }} -ojsonpath="{.data.ca\.crt}" | base64 -d)
          TLSCRT=$(./kubectl -n kafka get secret {{ .Values.skupper.token.name }} -ojsonpath="{.data.tls\.crt}" | base64 -d)
          TLSKEY=$(./kubectl -n kafka get secret {{ .Values.skupper.token.name }} -ojsonpath="{.data.tls\.key}" | base64 -d)
          vault login token="$VAULT_TOKEN"
          vault kv put secret/global/{{ .Values.skupper.token.key }} ca.crt="$CACRT"
          vault kv patch secret/global/{{ .Values.skupper.token.key }} tls.crt="$TLSCRT"
          vault kv patch secret/global/{{ .Values.skupper.token.key }} tls.key="$TLSKEY"
        name: upload-skupper-token-to-vault
        env:
        - name: VAULT_SKIP_VERIFY
          value: "true"
        - name: VAULT_ADDR
          value: "https://vault-vault.{{ .Values.global.hubClusterDomain }}"
        envFrom:
        - secretRef:
            name: vault-token-secret
            key: VAULT_TOKEN
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: {{ .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      terminationGracePeriodSeconds: 400
