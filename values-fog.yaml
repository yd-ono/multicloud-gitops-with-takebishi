# Fogクラスタのデプロイ用 valuesファイル
# 本デモでは、Fogクラスタを工場内のHubクラスタとして扱う
#
# 付与するクラスタラベル:
# clusterGroup : fog
# vendor: OpenShift
# platform_type: baremetal

global:
  options:
    useCSV: False
    syncPolicy: Automatic
    installPlanApproval: Automatic

  datacenter:
    # storageClassName: lvms-vg1
    storageClassName: lvms-vg1
    region: fog

# AWS側のOpenShiftのクラスタドメインを指定
# skupper:
#   connectClusterDomain: apps.fog.rhsc.local

clusterGroup:
  name: fog
  isHubCluster: false

  namespaces:
    - golang-external-secrets
    - kafka
    - openshift-storage

  subscriptions:

    amq-streams:
      name: amq-streams
      channel: amq-streams-2.4.x
      namespace: openshift-operators

    camel:
      name: red-hat-camel-k
      channel: latest
      namespace: openshift-operators

    skupper:
      name: skupper-operator
      namespace: openshift-operators
      installPlanApproval: Automatic
      channel: alpha
      source: redhat-operators
      startingCSV: skupper-operator.v1.2

    odf:
      name: odf-operator
      namespace: openshift-storage
      channel: stable-4.12
      source: redhat-operators
      startingCSV: odf-operator.v4.12.5-rhodf

  projects:
    - eso
    - fog

  applications:
    # golang-external-secrets:
    #   name: golang-external-secrets
    #   namespace: golang-external-secrets
    #   project: eso
    #   path: common/golang-external-secrets

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: eso
      path: charts/deviceedge/golang-external-secrets

    object-storage:
      name: object-storage
      namespace: openshift-storage
      project: fog
      path: charts/common/object-storage

    mqtt2kafka-plc-state:
      name: mqtt2kafka-plc-state
      namespace: kafka
      project: fog
      path: charts/fog/mqtt2kafka-plc-state

    mqtt2kafka-result:
      name: mqtt2kafka-result
      namespace: kafka
      project: fog
      path: charts/fog/mqtt2kafka-result

    mqtt2kafka-oee:
      name: mqtt2kafka-oee
      namespace: kafka
      project: fog
      path: charts/fog/mqtt2kafka-oee

    # kafka2s3-plc-state:
    #   name: kafka2s3-plc-state
    #   namespace: kafka
    #   project: fog
    #   path: charts/fog/kafka2s3-plc-state

    # kafka2s3-result:
    #   name: kafka2s3-result
    #   namespace: kafka
    #   project: fog
    #   path: charts/fog/kafka2s3-result

    # kafka2s3-oee:
    #   name: kafka2s3-oee
    #   namespace: kafka
    #   project: fog
    #   path: charts/fog/kafka2s3-oee

    kafka:
      name: kafka-broker
      namespace: kafka
      project: fog
      path: charts/fog/kafka

    kafka-mirror-plc-state:
      name: kafka-mirror-plc-state
      namespace: kafka
      project: fog
      path: charts/fog/kafka-mirror-maker-plc-state

    kafka-mirror-result:
      name: kafka-mirror-result
      namespace: kafka
      project: fog
      path: charts/fog/kafka-mirror-maker-result

    kafka-mirror-oee:
      name: kafka-mirror-oee
      namespace: kafka
      project: fog
      path: charts/fog/kafka-mirror-maker-oee

    kafdrop:
      name: kafdrop
      namespace: kafka
      project: fog
      path: charts/fog/kafdrop

    skupper:
      name: skupper
      namespace: kafka
      project: fog
      path: charts/fog/skupper

  # imperative:
  # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
  # The default schedule is every 10 minutes: imperative.schedule
  # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
  # imagePullPolicy is set to always: imperative.imagePullPolicy
  # For additional overrides that apply to the jobs, please refer to
  # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    # jobs:
    # - name: hello-world
    #   # ansible playbook to be run
    #   playbook: common/ansible/playbooks/hello-world/hello-world.yaml
    #   # per playbook timeout in seconds
    #   timeout: 234
    #   # verbosity: "-v"

# NOTE: If you want to create a new cluster to edge or fog location, comment out the following line.
  # managedClusterGroups:

  #   edge:
  #     name: edge
  #     acmlabels:
  #     - name: clusterGroup
  #       value: edge
  #     helmOverrides:
  #     - name: clusterGroup.isHubCluster
  #       value: false

      # NOTE: If you want to create cluter by ACM, comment out the following lines
      # clusterPools:
      #   exampleAWSPool:
      #     size: 1
      #     name: edge
      #     openshiftVersion: 4.13.12
      #     # baseDomain: rhsc.local
      #     baseDomain: sandbox1254.opentlc.com
      #     controlPlane:
      #       count: 1
      #       platform:
      #         aws:
      #           type: m5.4xlarge
      #     workers:
      #       count: 0
      #     platform:
      #       aws:
      #         region: ap-northeast-2
      #     clusters:
      #     - One