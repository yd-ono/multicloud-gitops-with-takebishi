# Fogラスタのデプロイ用 valuesファイル
# 付与するクラスタラベル
# ACMでデプロイされたクラスタ
# clusterGroup : fog
# vendor: OpenShif
#
# ベアメタルのクラスタをインポートした場合は追加で以下のラベルを付与する
# platform_type: baremetal

global:
  options:
    useCSV: False
    syncPolicy: Automatic
    installPlanApproval: Automatic

  datacenter:
    storageClassName: gp3-csi
    region: ap-northeast-2

clusterGroup:
  name: fog
  isHubCluster: false

  namespaces:
    - golang-external-secrets
    - kafka
    - openshift-storage

  subscriptions:
    amq-streams:
      name: amq-streams
      channel: amq-streams-2.4.x
      namespace: openshift-operators

    camel:
      name: red-hat-camel-k
      channel: latest
      namespace: openshift-operators

    skupper:
      name: skupper-operator
      namespace: openshift-operators
      installPlanApproval: Automatic
      channel: alpha
      source: redhat-operators
      startingCSV: skupper-operator.v1.2

    odf:
      name: odf-operator
      namespace: openshift-storage
      channel: stable-4.14
      source: redhat-operators
      startingCSV: odf-operator.v4.14.0-rhodf

  projects:
    - eso
    - fog

  applications:
    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: eso
      path: common/golang-external-secrets

    object-storage:
      name: object-storage
      namespace: openshift-storage
      project: fog
      path: charts/common/object-storage

    mqtt2kafka:
      name: mqtt2kafka
      namespace: kafka
      project: fog
      path: charts/fog/mqtt2kafka

    kafka2s3:
      name: kafka2s3
      namespace: kafka
      project: fog
      path: charts/fog/kafka2s3

    kafka:
      name: kafka-broker
      namespace: kafka
      project: fog
      path: charts/fog/kafka

    kafka-mirror:
      name: kafka-mirror
      namespace: kafka
      project: fog
      path: charts/fog/kafka-mirror-maker

    kafdrop:
      name: kafdrop
      namespace: kafka
      project: fog
      path: charts/fog/kafdrop

    skupper:
      name: skupper
      namespace: kafka
      project: fog
      path: charts/fog/skupper

  # imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    # jobs:
    # - name: hello-world
    #   # ansible playbook to be run
    #   playbook: common/ansible/playbooks/hello-world/hello-world.yaml
    #   # per playbook timeout in seconds
    #   timeout: 234
      # verbosity: "-v"

#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#    pipelines:
#      name: pipelines
#      namespace: production
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: stable
#      overrides:
#      - name: myparam
#        value: myparam
#
#    pipelines_staging:
#    - name: pipelines
#      namespace: staging
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: main
#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#    vendor-app:
#      name: vendor-app
#      namespace: default
#      project: vendor
#      path: path/to/myapp
#      repoURL: https://github.com/vendor/applications.git
#      targetRevision: main

#  managedSites:
#    factory:
#      name: factory
#      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#      targetRevision: main
#      path: applications/factory
#      helmOverrides:
#      - name: site.isHubCluster
#        value: false
#      clusterSelector:
#        matchExpressions:
#        - key: vendor
#          operator: In
#          values:
#            - OpenShift
