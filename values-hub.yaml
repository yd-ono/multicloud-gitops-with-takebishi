clusterGroup:
  name: hub
  isHubCluster: true

  namespaces:
    - open-cluster-management
    - vault
    - golang-external-secrets
    - kafka
    # - openshift-storage
    # - config-demo
    # - hello-world

  subscriptions:
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.7
      #csv: advanced-cluster-management.v2.6.1

    skupper:
      name: skupper-operator
      namespace: openshift-operators
      installPlanApproval: Automatic
      channel: alpha
      source: redhat-operators
      startingCSV: skupper-operator.v1.2

    amq-streams:
      name: amq-streams
      channel: stable
      namespace: openshift-operators

    camel:
      name: red-hat-camel-k
      channel: latest
      namespace: openshift-operators

    # NOTE: If you want to deploy all-in-one box to hub cluster,
    # comment out the following applications configurations:
    # amq-broker:
    #   name: amq-broker-rhel8
    #   channel: 7.11.x
    #   namespace: openshift-operators

    # NOTE: optional
    # odf:
    #   name: odf-operator
    #   namespace: openshift-storage
    #   channel: stable-4.12
    #   source: redhat-operators
    #   startingCSV: odf-operator.v4.12.5-rhodf

  projects:
    - hub
    - eso
    # - config-demo
    # - hello-world
    # - kafka
    # - dw-gateway

  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      path: common/acm
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
          - /spec/loggingCA

    vault:
      name: vault
      namespace: vault
      project: hub
      path: common/hashicorp-vault

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: eso
      path: common/golang-external-secrets

    # NOTE: optional
    # object-storage:
    #   name: object-storage
    #   namespace: kafka
    #   project: fog
    #   path: common/object-storage

    skupper:
      name: skupper
      namespace: kafka
      project: hub
      path: charts/hub/skupper

    kafka:
      name: kafka-broker
      namespace: kafka
      project: hub
      path: charts/hub/kafka

    kafdrop:
      name: kafdrop
      namespace: kafka
      project: hub
      path: charts/hub/kafdrop

    kafka2s3:
      name: kafka2s3
      namespace: kafka
      project: hub
      path: charts/hub/kafka2s3

    # NOTE: If you want to deploy all-in-one box to hub cluster,
    # comment out the following applications configurations:

    # mqtt2kafka:
    #   name: mqtt2kafka
    #   namespace: kafka
    #   project: hub
    #   path: charts/fog/mqtt2kafka

    # device-gateway:
    #   name: dgw
    #   namespace: dgw
    #   project: hub
    #   path: charts/edge/dgw

    # amq:
    #   name: mqtt-broker
    #   namespace: mqtt
    #   project: hub
    #   path: charts/edge/amq

  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: hello-world
      # ansible playbook to be run
      playbook: common/ansible/playbooks/hello-world/hello-world.yaml
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"

  managedClusterGroups:
    fog:
      name: fog
      acmlabels:
      - name: clusterGroup
        value: fog
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false

      clusterPools:
        exampleAWSPool:
          size: 1
          name: fog
          openshiftVersion: 4.12.24
          baseDomain: sandbox1446.opentlc.com
          controlPlane:
            count: 3
            platform:
              aws:
                type: m5.8xlarge
          workers:
            count: 0
          platform:
            aws:
              region: ap-northeast-2
          clusters:
          - One

    edge:
      name: edge
      acmlabels:
      - name: clusterGroup
        value: edge
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false

      clusterPools:
        exampleAWSPool:
          size: 1
          name: edge
          openshiftVersion: 4.12.24
          baseDomain: sandbox1446.opentlc.com
          controlPlane:
            count: 1
            platform:
              aws:
                type: m5.2xlarge
          workers:
            count: 0
          platform:
            aws:
              region: ap-northeast-3
          clusters:
          - One

      # Before enabling cluster provisioning, ensure AWS and/or Azure
      #   credentials and OCP pull secrets are defined in Vault.
      #   See values-secret.yaml.template
      #
      #clusterPools:
      #  exampleAWSPool:
      #    name: aws-ap
      #    openshiftVersion: 4.10.18
      #    baseDomain: blueprints.rhecoeng.com
      #    platform:
      #      aws:
      #        region: ap-southeast-2
      #    clusters:
      #    - One
      #
      #  exampleAzurePool:
      #    name: azure-us
      #    openshiftVersion: 4.10.18
      #    baseDomain: blueprints.rhecoeng.com
      #    platform:
      #      azure:
      #        baseDomainResourceGroupName: dojo-dns-zones
      #        region: eastus
      #    clusters:
      #    - Two
      #    - Three

#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#    pipelines:
#      name: pipelines
#      namespace: production
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: stable
#      overrides:
#      - name: myparam
#        value: myparam
#
#    pipelines_staging:
#    - name: pipelines
#      namespace: staging
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: main
#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#    vendor-app:
#      name: vendor-app
#      namespace: default
#      project: vendor
#      path: path/to/myapp
#      repoURL: https://github.com/vendor/applications.git
#      targetRevision: main

#  managedSites:
#    factory:
#      name: factory
#      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#      targetRevision: main
#      path: applications/factory
#      helmOverrides:
#      - name: site.isHubCluster
#        value: false
#      clusterSelector:
#        matchExpressions:
#        - key: vendor
#          operator: In
#          values:
#            - OpenShift
