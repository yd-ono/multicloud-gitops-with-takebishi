# Hubクラスタのデプロイ用 valuesファイル
# デプロイ先： AWS

global:
  apps:
    namespace: "kafka"
  datacenter:
    storageClassName: gp3-csi
    region: ap-northeast-1
  bucket:
    name: demo
    namespace: openshift-storage

clusterGroup:
  name: hub
  isHubCluster: true

  namespaces:
    - open-cluster-management
    - vault
    - golang-external-secrets
    - kafka
    - openshift-storage
    - argocd
    - multicloud-gitops-with-takebishi-deviceedge
    - rhsc-demo-deviceedge

  subscriptions:
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.8

    skupper:
      name: skupper-operator
      namespace: openshift-operators
      installPlanApproval: Automatic
      channel: alpha
      source: redhat-operators
      startingCSV: skupper-operator.v1.2

    amq-streams:
      name: amq-streams
      channel: amq-streams-2.4.x
      namespace: openshift-operators

    camel:
      name: red-hat-camel-k
      channel: latest
      namespace: openshift-operators

    odf:
      name: odf-operator
      namespace: openshift-storage
      channel: stable-4.12
      source: redhat-operators
      startingCSV: odf-operator.v4.12.5-rhodf

  projects:
    - hub
    - eso

  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      path: common/acm
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
          - /spec/loggingCA

    vault:
      name: vault
      namespace: vault
      project: hub
      path: common/hashicorp-vault

    management-vault-token:
      name: management-vault-token
      namespace: imperative
      project: hub
      path: charts/hub/management-vault-token

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: eso
      path: common/golang-external-secrets

    object-storage:
      name: object-storage
      namespace: openshift-storage
      project: hub
      path: charts/common/object-storage

    skupper:
      name: skupper
      namespace: kafka
      project: hub
      path: charts/hub/skupper

    kafka:
      name: kafka-broker
      namespace: kafka
      project: hub
      path: charts/hub/kafka

    kafdrop:
      name: kafdrop
      namespace: kafka
      project: hub
      path: charts/hub/kafdrop

    # kafka2s3:
    #   name: kafka2s3
    #   namespace: kafka
    #   project: hub
    #   path: charts/hub/kafka2s3

    kafka2s3-plc-state:
      name: kafka2s3-plc-state
      namespace: kafka
      project: hub
      path: charts/hub/kafka2s3-plc-state

    kafka2s3-result:
      name: kafka2s3-result
      namespace: kafka
      project: hub
      path: charts/hub/kafka2s3-result

    kafka2s3-oee:
      name: kafka2s3-oee
      namespace: kafka
      project: hub
      path: charts/hub/kafka2s3-oee

    deviceedge_cluster_argocd:
      name: cluster-argocd
      namespace: argocd
      project: hub
      path: charts/hub/acm-subscription-cluster-argocd

    deviceedge_apps_argocd:
      name: apps-argocd
      namespace: rhsc-demo-deviceedge
      project: hub
      path: charts/hub/acm-subscription-apps-argocd

  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: hello-world
      # ansible playbook to be run
      playbook: common/ansible/playbooks/hello-world/hello-world.yaml
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"

  # NOTE: If you want to create a new cluster to edge or fog location, comment out the following line.
  managedClusterGroups:

    fog:
      name: fog
      acmlabels:
      - name: clusterGroup
        value: fog
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false

      # NOTE: If you want to create cluter by ACM, comment out the following lines
      # clusterPools:
      #   exampleAWSPool:
      #     size: 1
      #     name: fog
      #     openshiftVersion: 4.13.17
      #     baseDomain: sandbox2556.opentlc.com
      #     controlPlane:
      #       count: 3
      #       platform:
      #         aws:
      #           type: m5.4xlarge
      #     workers:
      #       count: 0
      #     platform:
      #       aws:
      #         region: ap-northeast-2
      #     clusters:
      #     - One

    edge:
      name: edge
      acmlabels:
      - name: clusterGroup
        value: edge
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false

      # NOTE: If you want to create cluter by ACM, comment out the following lines
      # clusterPools:
      #   exampleAWSPool:
      #     size: 1
      #     name: edge
      #     openshiftVersion: 4.13.17
      #     baseDomain: sandbox2556.opentlc.com
      #     controlPlane:
      #       count: 1
      #       platform:
      #         aws:
      #           type: m5.2xlarge
      #     workers:
      #       count: 0
      #     platform:
      #       aws:
      #         region: ap-northeast-3
      #     clusters:
      #     - One